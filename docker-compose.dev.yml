version: "3.8"

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD:-YourStrong!Passw0rd}
    ports:
      - "8081:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    command: start-dev
    networks:
      - task-network

  db-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: db-server
    platform: ${DB_PLATFORM:-}
    environment:
      SA_PASSWORD: ${DB_PASSWORD:-YourStrong!Passw0rd}
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - task-network
    restart: always
    volumes:
      - taskmanager_sqlserver_data_dev:/var/opt/mssql 

  rabbitmq:
    image: rabbitmq:3-management 
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672" 
      - "15672:15672" 
    environment:
      - RABBITMQ_DEFAULT_USER=${RMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RMQ_PASSWORD:-YourStrong!Passw0rd}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - task-network

  proxy:
    build:
      context: ./backend
      dockerfile: ./Proxy/Dockerfile
    container_name: task-manager-proxy
    ports:
      - "8080:8080"
    depends_on:
      - keycloak
      - task-service
      - user-service
    networks:
      - task-network
    restart: always

  task-service:
    build:
      context: ./backend
      dockerfile: ./Services/TaskService/Dockerfile
      target: debug 
    container_name: task-service
    depends_on:
      - db-server
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__TaskDb=Server=db-server;Database=TaskDb;User Id=sa;Password=${DB_PASSWORD:-YourStrong!Passw0rd};TrustServerCertificate=True;
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RMQ_USER:-admin}
      - RABBITMQ_PASS=${RMQ_PASSWORD:-YourStrong!Passw0rd}
    ports:
      - "8082:8080"
    volumes:
      - ./backend:/src
      - /src/Services/TaskService/TaskService.API/bin/
      - /src/Services/TaskService/TaskService.API/obj/
      - /src/Services/TaskService/TaskService.Application/bin/
      - /src/Services/TaskService/TaskService.Application/obj/
      - /src/Services/TaskService/TaskService.Domain/bin/
      - /src/Services/TaskService/TaskService.Domain/obj/
      - /src/Services/TaskService/TaskService.Infrastructure/bin/
      - /src/Services/TaskService/TaskService.Infrastructure/obj/
      - /src/Shared/Shared.API/bin/
      - /src/Shared/Shared.API/obj/
      - /src/Shared/Shared.Domain/bin/
      - /src/Shared/Shared.Domain/obj/
      - /src/Shared/Shared.Infrastructure/bin/
      - /src/Shared/Shared.Infrastructure/obj/
    networks:
      - task-network

  user-service:
    build:
      context: ./backend
      dockerfile: ./Services/UserService/Dockerfile
      target: debug 
    container_name: user-service
    depends_on:
      - db-server
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__UserDb=Server=db-server;Database=UserDB;User Id=sa;Password=${DB_PASSWORD:-YourStrong!Passw0rd};TrustServerCertificate=True;
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RMQ_USER:-admin}
      - RABBITMQ_PASS=${RMQ_PASSWORD:-YourStrong!Passw0rd}
      - Keycloak__Url=http://keycloak:8080
      - Keycloak__Realm=task-manager
      - Keycloak__ClientId=admin
      - Keycloak__ClientSecret=RT4MOjOjdHEnwu3wETDOptdL5ZqbivOn
    ports:
      - "8083:8080"
    volumes:
      - ./backend:/src
      - /src/Services/UserService/UserService.API/bin/
      - /src/Services/UserService/UserService.API/obj/
      - /src/Services/UserService/UserService.Application/bin/
      - /src/Services/UserService/UserService.Application/obj/
      - /src/Services/UserService/UserService.Domain/bin/
      - /src/Services/UserService/UserService.Domain/obj/
      - /src/Services/UserService/UserService.Infrastructure/bin/
      - /src/Services/UserService/UserService.Infrastructure/obj/
      - /src/Shared/Shared.API/bin/
      - /src/Shared/Shared.API/obj/
      - /src/Shared/Shared.Domain/bin/
      - /src/Shared/Shared.Domain/obj/
      - /src/Shared/Shared.Infrastructure/bin/
      - /src/Shared/Shared.Infrastructure/obj/
    networks:
      - task-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: debug
    container_name: frontend
    ports:
      - "3000:5173"
      - "9229:9229"  
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    environment:
      - NODE_ENV=development
    networks:
      - task-network

networks:
  task-network:
    driver: bridge

volumes:
  taskmanager_sqlserver_data_dev:
  keycloak_data:
  rabbitmq_data:
